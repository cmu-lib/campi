# Generated by Django 3.0.7 on 2020-06-23 21:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cv', '0021_closematchset_has_duplicates'),
        ('photograph', '0003_auto_20200608_1103'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, default='', help_text='Short readable label', max_length=400)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaggingTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, help_text='Descriptive notes')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Date created (automatically recorded)')),
                ('last_updated', models.DateTimeField(auto_now=True, db_index=True, help_text='Date last modified (automatically recorded)')),
                ('assigned_user', models.ForeignKey(help_text='The user currently working on this tagging task', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='active_tags', to=settings.AUTH_USER_MODEL)),
                ('pytorch_model', models.ForeignKey(help_text='The CV model associated with this tagging task', on_delete=django.db.models.deletion.CASCADE, related_name='tagging_tasks', to='cv.PyTorchModel')),
                ('tag', models.ForeignKey(help_text='The vocabulary tag to be applied when working this task', on_delete=django.db.models.deletion.CASCADE, related_name='tagging_tasks', to='tagging.Tag')),
            ],
            options={
                'unique_together': {('tag', 'pytorch_model')},
            },
        ),
        migrations.CreateModel(
            name='TaggingDecision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Date created (automatically recorded)')),
                ('last_updated', models.DateTimeField(auto_now=True, db_index=True, help_text='Date last modified (automatically recorded)')),
                ('is_applicable', models.NullBooleanField(db_index=True, default=None, help_text='Is the given tag applicable to this photograph?')),
                ('photograph', models.ForeignKey(help_text='The photograph this tagging decision applies to', on_delete=django.db.models.deletion.CASCADE, related_name='tagging_decisions', to='photograph.Photograph')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagging_decisions', to='tagging.TaggingTask')),
                ('user_created', models.ForeignKey(editable=False, help_text='Created by user', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='taggingdecisions_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('photograph', 'task')},
            },
        ),
    ]
